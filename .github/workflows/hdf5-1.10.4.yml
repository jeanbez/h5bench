name: HDF5 1.10.4

on:
  pull_request:

  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  h5bench:
    runs-on: ubuntu-18.04
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install cmake
          sudo apt install gcc
          sudo apt-get install libtool
          sudo apt-get install zlib1g-dev
          sudo apt-get install python3
          sudo apt-get install libopenmpi-dev
          
          # hdf5
          wget https://github.com/HDFGroup/hdf5/archive/refs/tags/hdf5-1_10_4.tar.gz
          tar zxvf hdf5-1_10_4.tar.gz
          mv hdf5-hdf5-1_10_4 hdf5

          # vol-async
          git clone --recursive https://github.com/hpc-io/vol-async.git

      - name: Install HDF5 1.10.4
        run: |
          mydir="$PWD"
          export HDF5_DIR=$mydir/hdf5/install
          
          mkdir $HDF5_DIR
          # Compile HDF5
          cd hdf5
          export HDF5_LIBTOOL=/usr/bin/libtoolize
          ./autogen.sh
          CC=mpicc ./configure --prefix=$HDF5_DIR --enable-parallel --enable-threadsafe --enable-unsupported
          make -j 16
          make install
          
      - name: Build h5bench
        run: |
          export HDF5_HOME=$PWD/hdf5/install
          mkdir build_sync
          cd build_sync
          CC=mpicc cmake ..
          make
          
      - name: Test h5bench SYNC Read & Write (NON)
        run: |
          cd build_sync
          ./h5bench_write /home/runner/work/h5bench/h5bench/h5bench_patterns/sample_config/sample_cc1d_small.cfg file.h5
          ./h5bench_read /home/runner/work/h5bench/h5bench/h5bench_patterns/sample_config/sample_cc1d_small.cfg file.h5
